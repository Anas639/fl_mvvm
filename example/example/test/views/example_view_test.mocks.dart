// Mocks generated by Mockito 5.4.4 from annotations
// in example/test/views/example_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:example/models/example_model.dart' as _i4;
import 'package:example/views/example_view_model.dart' as _i3;
import 'package:fl_mvvm/fl_mvvm.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:signals_flutter/signals_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSignal_0<T> extends _i1.SmartFake implements _i2.Signal<T> {
  _FakeSignal_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExampleViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockExampleViewModel extends _i1.Mock implements _i3.ExampleViewModel {
  @override
  List<_i4.ExampleModel> get exampleList => (super.noSuchMethod(
        Invocation.getter(#exampleList),
        returnValue: <_i4.ExampleModel>[],
        returnValueForMissingStub: <_i4.ExampleModel>[],
      ) as List<_i4.ExampleModel>);

  @override
  bool get isInitilized => (super.noSuchMethod(
        Invocation.getter(#isInitilized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i2.Signal<_i5.FlState<List<_i4.ExampleModel>>> get state =>
      (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSignal_0<_i5.FlState<List<_i4.ExampleModel>>>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub:
            _FakeSignal_0<_i5.FlState<List<_i4.ExampleModel>>>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.Signal<_i5.FlState<List<_i4.ExampleModel>>>);

  @override
  bool get shouldBuildError => (super.noSuchMethod(
        Invocation.getter(#shouldBuildError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get requireData => (super.noSuchMethod(
        Invocation.getter(#requireData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLoadng => (super.noSuchMethod(
        Invocation.getter(#isLoadng),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isError => (super.noSuchMethod(
        Invocation.getter(#isError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isData => (super.noSuchMethod(
        Invocation.getter(#isData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasData => (super.noSuchMethod(
        Invocation.getter(#hasData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void onViewInitialized() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reload() => super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reloadWithError() => super.noSuchMethod(
        Invocation.method(
          #reloadWithError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void buildDependencies() => super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i5.FlState<List<_i4.ExampleModel>>? newState) =>
      super.noSuchMethod(
        Invocation.method(
          #setState,
          [newState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoading() => super.noSuchMethod(
        Invocation.method(
          #setLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setData(List<_i4.ExampleModel>? data) => super.noSuchMethod(
        Invocation.method(
          #setData,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFutureData(
    _i6.Future<List<_i4.ExampleModel>?>? futureData, {
    bool? withLoading = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setFutureData,
          [futureData],
          {#withLoading: withLoading},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEmpty([String? message = r'']) => super.noSuchMethod(
        Invocation.method(
          #setEmpty,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #setError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i5.FlState<List<_i4.ExampleModel>>?>
      waitForStateChange<S extends _i5.FlState<dynamic>>({int? timeout}) =>
          (super.noSuchMethod(
            Invocation.method(
              #waitForStateChange,
              [],
              {#timeout: timeout},
            ),
            returnValue:
                _i6.Future<_i5.FlState<List<_i4.ExampleModel>>?>.value(),
            returnValueForMissingStub:
                _i6.Future<_i5.FlState<List<_i4.ExampleModel>>?>.value(),
          ) as _i6.Future<_i5.FlState<List<_i4.ExampleModel>>?>);
}
